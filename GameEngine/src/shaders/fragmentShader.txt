#version 400 core

//Input variables from our vertex shader
in vec2 pass_textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;

//Calculated color
out vec4 out_color;

uniform sampler2D textureSampler;
uniform vec3 lightColor;

void main(void) {

	//Normalize the surface normal and light vector 
	vec3 unitNormal      = normalize(surfaceNormal);
	vec3 unitLightVector = normalize(toLightVector);
	
	//Calculate the dot product of the unit normal and unit light vector
	float nDot1      = dot(unitNormal, unitLightVector);
	
	//nDot1 is a value between -1 and 1 so we take the max of nDot1 and 0
	float brightness = max(nDot1, 0.0);
	
	vec3 diffuse = brightness * lightColor;
	
	out_color = vec4(diffuse, 1.0) * texture(textureSampler, pass_textureCoords);

}